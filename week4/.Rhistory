tpe_vil <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Taipei_Vill", encoding="utf8")
fastfood <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Tpe_Fastfood", encoding="utf8")
library(spdep)
library(rgdal)
library(GISToolS)
tpe_vil <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Taipei_Vill", encoding="utf8")
fastfood <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Tpe_Fastfood", encoding="utf8")
mic_tpe <- fastfood[fastfood$STORE == "MIC" ,]
mic_buf <- gBuffer(mic_tpe, width = 1000)
library(GISToolS)
library(GISTools)
mic_buf <- gBuffer(mic_tpe, width = 1000)
mic_tpe@data
mic_buf <- gBuffer(mic_tpe, width = 1000, byid = T, id = mic_tpe$ALIAS)
mic_buf <- gBuffer(mic_tpe, width = 1000, byid = T)
mic_buf@data
mic_count <- poly.counts(mic_tpe, mic_buf)
mic_count
max(mic_count)
par(mar=c(0,0,0,0))
plot(mic_buf)
plot(mic_tpe, add = T, border = "blue")
par(mar=c(0,0,0,0))
plot(mic_buf, pch=16)
plot(mic_tpe, add = T, border = "blue")
par(mar=c(0,0,0,0))
plot(mic_buf, pch=16)
plot(mic_tpe, add = T, pch=16, border = "blue")
par(mar=c(0,0,0,0))
plot(mic_buf, col= 'darkgray', alpha=0.4)
plot(mic_tpe, add = T, pch=16, border = "blue")
par(mar=c(0,0,0,0))
plot(mic_buf, col= alpha('darkgray', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue")
library(scales)
par(mar=c(0,0,0,0))
plot(mic_buf, col= alpha('darkgray', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue")
class(mic_count)
which(mic_count==max(mic_count))
mic_count[which(mic_count==max(mic_count)),]
c(which(mic_count==max(mic_count)))
mic_count[c(which(mic_count==max(mic_count))),]
which(mic_count==max(mic_count))[1]
which(mic_count==max(mic_count))[,1]
which(mic_count==max(mic_count))[1,]
which(mic_count==max(mic_count))
class(which(mic_count==max(mic_count)))
length(which(mic_count==max(mic_count)))
split(which(mic_count==max(mic_count)))
which(mic_count==max(mic_count))
index <- which(mic_count==max(mic_count))
mic_count[which(mic_count==max(mic_count)),]
which.max(mic_count)
mic_count[which.max(mic_count),]
mic_count[which.max(mic_count)]
mic_count[which.max(mic_count)]
mic_tpe[which.max(mic_count)]
mic_tpe[which.max(mic_count),]
mic_tpe@data[which.max(mic_count),]
which.max(mic_count)
mic_count
which.max(mic_count)
mic_count[41]
mic_tpe@data
mic_tpe[which.max(mic_count),]
par(mar=c(0,0,0,0))
plot(mic_buf, col= alpha('darkgray', 0.4))
plot(mic_tpe[which.max(mic_count),], col= alpha('red', 0.8))
plot(mic_tpe, add = T, pch=16, border = "blue")
par(mar=c(0,0,0,0))
plot(mic_buf, col= alpha('darkgray', 0.4))
plot(mic_tpe[which.max(mic_count),], add = T,col= alpha('red', 0.8))
plot(mic_tpe, add = T, pch=16, border = "blue")
plot(mic_tpe[which.max(mic_count),], add = T,col= 'red')
plot(mic_buf[which.max(mic_count),], add = T,col= 'red')
par(mar=c(0,0,0,0))
plot(mic_buf, col= alpha('darkgray', 0.4))
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue")
par(mar=c(0,0,0,0))
plot(mic_buf, col= alpha('darkgray', 0.4))
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .5)
par(mar=c(0,0,0,0))
plot(tpe_vil)
plot(mic_buf, add = T, col= alpha('darkgray', 0.4))
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .5)
par(mar=c(0,0,0,0))
plot(tpe_vil)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
install.packages("gpclib")
tpe_town <- gUnaryUnion(region, id = tpe_vil@data$TOWN)
tpe_town <- gUnaryUnion(tpe_vil, id = tpe_vil@data$TOWN)
par(mar=c(0,0,0,0))
plot(tpe_town)
par(mar=c(0,0,0,0))
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
par(mar=c(0,0,0,0))
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
plot(mic_tpe[which.max(mic_count),], add = T, col='red')
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
plot(mic_tpe[which.max(mic_count),], add = T, pch=13, col='red')
mic_tpe[which.max(mic_count),]
mic_tpe[which.max(mic_count),3]
mic_tpe@data[which.max(mic_count),3]
mic_tpe@coords[which.max(mic_count),3]
mic_tpe@coords[which.max(mic_count),3]
mic_tpe[which.max(mic_count),3]
mic_tpe[which.max(mic_count),3]@coords
mic_tpe[which.max(mic_count),3]@coords[1]
par(mar=c(0,0,0,0))
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
plot(mic_tpe[which.max(mic_count),], add = T, pch=13, col='red')
text(labels=paste(mic_tpe@data[which.max(mic_count),3]), add=T,
x=mic_tpe[which.max(mic_count),3]@coords[1], y=mic_tpe[which.max(mic_count),3]@coords[2])
par(mar=c(0,0,0,0))
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
plot(mic_tpe[which.max(mic_count),], add = T, pch=13, col='red')
text(labels=paste(mic_tpe@data[which.max(mic_count),3]), add=T,
x=mic_tpe[which.max(mic_count),3]@coords[1]-3000, y=mic_tpe[which.max(mic_count),3]@coords[2])
par(mar=c(0,0,0,0))
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
plot(mic_tpe[which.max(mic_count),], add = T, pch=13, col='red')
text(labels=paste(mic_tpe@data[which.max(mic_count),3]),
x=mic_tpe[which.max(mic_count),3]@coords[1]-5000, y=mic_tpe[which.max(mic_count),3]@coords[2])
library(spdep)
library(rgdal)
library(GISTools)
library(scales)
tpe_vil <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Taipei_Vill", encoding="utf8")
fastfood <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Tpe_Fastfood", encoding="utf8")
mic_tpe <- fastfood[fastfood$STORE == "MIC" ,]
mic_buf <- gBuffer(mic_tpe, width = 1000, byid = T)
mic_count <- poly.counts(mic_tpe, mic_buf)
tpe_town <- gUnaryUnion(tpe_vil, id=tpe_vil@data$TOWN)
par(mar=c(0,0,0,0))
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
plot(mic_tpe[which.max(mic_count),], add = T, pch=13, col='red')
text(labels=paste(mic_tpe@data[which.max(mic_count),3]),
x=mic_tpe[which.max(mic_count),3]@coords[1]-5000, y=mic_tpe[which.max(mic_count),3]@coords[2])
library(spdep)
library(rgdal)
library(GISTools)
library(scales)
tpe_vil <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Taipei_Vill", encoding="utf8")
fastfood <- readOGR(dsn = "D:/107-2 Spatial Analysis/week2", layer = "Tpe_Fastfood", encoding="utf8")
mic_tpe <- fastfood[fastfood$STORE == "MIC" ,]
mic_buf <- gBuffer(mic_tpe, width = 1000, byid = T)
mic_count <- poly.counts(mic_tpe, mic_buf)
tpe_town <- gUnaryUnion(tpe_vil, id=tpe_vil@data$TOWN)
par(mar=c(0,0,0,0))
plot(tpe_town)
plot(mic_buf[which.max(mic_count),], add = T,col= alpha('red', 0.4))
plot(mic_tpe, add = T, pch=16, border = "blue", cex = .7)
plot(mic_tpe[which.max(mic_count),], add = T, pch=13, col='red')
text(labels=paste(mic_tpe@data[which.max(mic_count),3]),
x=mic_tpe[which.max(mic_count),3]@coords[1]-5000, y=mic_tpe[which.max(mic_count),3]@coords[2])
